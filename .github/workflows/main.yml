name: REUSE Compliance Check

on: [push, pull_request]
concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  reuse:
    name: üö® REUSE Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fsfe/reuse-action@v1

  c-lint:
    name: üö® C lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-cpplint@master
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          targets: --recursive src
          level: warning
          flags: --linelength=120 # Optional
          filter: "-readability/braces\
            ,-readability/casting\
            ,-whitespace/comma\
            ,-whitespace/braces\
            ,-whitespace/comments\
            ,-whitespace/indent\
            ,-whitespace/newline\
            ,-whitespace/operators\
            ,-whitespace/parens\
            ,-whitespace/tab\
            " # Optional
        #    - name: Fail fast?!
        #      if: steps.linter.outputs.checks-failed > 0
        #      run: |
        #        echo "üò§ Some files failed the C linting checks!"

  lua-lint:
    name: üö® Lua lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup luacheck
      run: |
          if ! hash luacheck &>/dev/null; then
            sudo apt-get install -yq luarocks 1>/dev/null || exit 1
            sudo luarocks install luacheck 1>/dev/null || exit 1
            sudo luarocks install lanes &>/dev/null || true
          fi
          luacheck --version
      shell: bash
    - name: üö® LUA lint
      working-directory: src/lua
      run: |
        luacheck --config .luacheckrc --std lua54 .

  linux-crypto:
    name: üêß Linux crypto
    if: always()
    needs: [reuse, c-lint, lua-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo apt install zsh jq meson && make linux
          make check-crypto

  macosx-crypto:
    name: üçé Linux crypto
    runs-on: macos-latest
    if: always()
    needs: [reuse, c-lint, lua-lint]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - run: |
          pip install meson ninja
          make osx
          make check-osx


